#!/bin/bash

# Generated by LLM #

# Get the latest commit hash
latest_commit=$(git rev-parse HEAD)

# Check if the latest commit already has a tag
if [ $(git tag --points-at $latest_commit | wc -l) -ne 0 ]; then
  echo "Latest commit already has a tag."
  exit 1
fi

# Get the latest tag
latest_tag=$(git describe --tags --abbrev=0)

# Get the current version
current_version=${latest_tag#v}

# Parse the version into its components
major=$(echo $current_version | cut -d '.' -f 1)
minor=$(echo $current_version | cut -d '.' -f 2)
patch=$(echo $current_version | cut -d '.' -f 3)

# Increment the appropriate component based on the argument
if [ "$1" = "minor" ]; then
  minor=$((minor+1))
  patch=0
elif [ "$1" = "patch" ]; then
  patch=$((patch+1))
fi

# Create the new tag
new_tag="v$major.$minor.$patch"

# Tag the latest commit
git tag $new_tag

# Print a message indicating the commit has been tagged, along with its message
commit_message=$(git log --format=%B -n 1 HEAD)
echo "Tagged commit '$commit_message' with $new_tag: "
